import Head from 'next/head'
import { Button, Input, Modal } from 'antd'

import { AiOutlineSend } from 'react-icons/ai'
import { useState } from 'react'
import axios from 'axios'
import { toast } from 'react-toastify'


export default function Home() {

  // form get raspi
  const [ formRaspi, setFormRaspi ] = useState('')  
  const [ loadingForm, setLoadingForm ] = useState(false)
  const [ dataRaspi, setDataRaspi ] = useState(null)

  // form modal config raspi
  const [ showConfig, setShowConfig ] = useState(false)
  const [ loadingFormConfig, setLoadingFormConfig ] = useState(false)
  const [ formUpdateConfig, setFormUpdateConfig ] = useState<any>({})

  const createPaternFormModal = [
    { label: 'Rasberry Pi ID', key: 'raspi_id', readonly: true },
    { label: 'Aplikasi Mobile Koneksi', key: 'mobileAppsCon', readonly: true },
    { label: 'Rasberry Pi Wifi SSID', key: 'raspi_wifi_ssid' },
    { label: 'Rasberry Pi Wifi Password', key: 'raspi_wifi_password' },
    { label: 'ESP32CAM Wifi SSID', key: 'esp32cam_wifi_ssid' },
    { label: 'ESP32CAM Wifi Password', key: 'esp32cam_wifi_password' },
  ]


  const Submit = async () => {
    setLoadingForm(true)
    await axios.post('/api/login', { raspi_id: formRaspi })
      .then(res => {
        setShowConfig(true)
        setDataRaspi(res?.data?.data)
        setFormUpdateConfig(res?.data?.data?.[0])
      }).catch(err => {
        toast.error('error')
      })
    setLoadingForm(false)
  }

  const SubmitUpdateConfig = async () => {
    setLoadingFormConfig(true)
    await axios.put('/api/raspi_config', formUpdateConfig, { params: { uniq_id: formUpdateConfig._id }})
      .then(res => {
        toast.success('success')
      }).catch(err => {
        // toast.warning('error')
      })
    setLoadingFormConfig(false)
  }

  return (
    <>
      <Head>
        <title>Raspi Gateway Server</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-raspi-bg h-screen w-screen bg-cover flex items-center justify-center">
        <div className='w-11/12 lg:w-1/2 bg-black/80 backdrop-blur-sm rounded hover:shadow-xl py-8'>
          <div className='lg:p-5 mb-10 lg:mb-0'>
            <p className='text-center w-10/12 lg:w-2/3 mx-auto text-white'>Selamat Datang Di Server Gateway Rasberry PI</p>
            <p className='text-center w-10/12 lg:w-2/3 mx-auto text-white mt-4 uppercase'>Pengembangan Sistem Keamanan Rumah Pendeteksi Wajah Berbasis Rasberry PI Dan Aplikasi Mobile</p>
          </div>
          <div className='lg:p-5 w-2/3 mx-auto mb-5 lg:mb-0'>
            <p className='text-white text-center'>Raspi ID kamu</p>
            <Input placeholder='masukan raspi ID kamu disini' onChange={({ target }) => setFormRaspi(target.value)} />
          </div>
          <div className='lg:p-5 flex items-center justify-center'>
            <Button type='primary' className='bg-blue-500 flex items-center space-x-2' onClick={Submit} loading={loadingForm}>
              Submit
              <AiOutlineSend />
            </Button>
          </div>
        </div>

        <div className='fixed bottom-0 right-0'>
          <p className='text-white text-sm'>Project Skripsi By</p>
          <p className='text-white text-sm'>Ahas Eko Septianto</p>
          
        </div>
      </div>


      <Modal
        open={showConfig}
        onCancel={() => setShowConfig(false)}
        okButtonProps={{
          style: { backgroundColor: 'blue' }
        }}
        confirmLoading={loadingFormConfig}
        onOk={SubmitUpdateConfig}
        okText="Update"
        title='Raspi Config'
      >
        <div className='py-5'>
          <table className='w-full'>
            <thead>
              <tr>
                <th></th>
                <th></th>
              </tr>
            </thead>
            <tbody>
              {createPaternFormModal.map((item, idx) => (
                <tr key={idx}>
                  <td>
                    {item?.label}
                  </td>
                  <td>
                    <div className='flex items-center'>
                      <span className='ml-2 mr-1'>:</span>
                      {item?.readonly ? (
                        <p className='ml-1'>{dataRaspi?.[0]?.[item?.key] || '-'}</p>
                      ) : (
                        <Input onChange={({ target }) => setFormUpdateConfig({ ...formUpdateConfig, [item?.key]: target.value })} value={formUpdateConfig?.[item?.key]}/>
                      )}
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </Modal>
    </>
  )
}

